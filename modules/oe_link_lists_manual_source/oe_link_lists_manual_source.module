<?php

/**
 * @file
 * The OpenEuropa Link Lists Manual Source module file.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\oe_link_lists\Entity\LinkListInterface;
use Drupal\oe_link_lists_manual_source\Entity\Bundle\ManualLinkList;
use Drupal\oe_link_lists_manual_source\LinkListLinkInlineForm;

/**
 * Implements hook_entity_type_build().
 */
function oe_link_lists_manual_source_entity_type_build(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  if (isset($entity_types['link_list_link'])) {
    $entity_types['link_list_link']->setHandlerClass('inline_form', LinkListLinkInlineForm::class);
  }
}

/**
 * Implements hook_entity_delete().
 *
 * Delete orphan manual link list links.
 */
function oe_link_lists_manual_source_entity_delete(EntityInterface $entity) {
  if (!$entity instanceof LinkListInterface) {
    return;
  }

  if ($entity->bundle() !== 'manual' || $entity->get('links')->isEmpty()) {
    return;
  }

  $ids = $entity->get('links')->getValue();
  $link_list_link_storage = \Drupal::entityTypeManager()->getStorage('link_list_link');
  $link_entities = $link_list_link_storage->loadMultipleRevisions(array_column($ids, 'target_revision_id'));

  if (empty($link_entities)) {
    return;
  }

  $link_list_link_storage->delete($link_entities);
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function oe_link_lists_manual_source_entity_bundle_info_alter(&$bundles) {
  if (isset($bundles['link_list']['manual'])) {
    $bundles['link_list']['manual']['class'] = ManualLinkList::class;
  }
}
